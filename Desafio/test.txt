1  - 001 *
3  - 00011 *
5  - 00101 
7  - 0000111 *
11 - 0001011
13 - 0001101
15 - 000001111 *
19 - 0010011
21 - 0010101
23 - 000010111
27 - 000011011
31 - 00000011111*
39 - 000100111
43 - 000101011
51 - 000110011
71 - 001000111

/*=============================================================*/
/*            						       */
/*		    CHECK 'AND' BIT OPERATOR		       */
/*							       */
/*=============================================================*/
/*							       */							       
/*	00000						       */
/*	00001						       */
/*	00010						       */
/*	00011 *						       */
/*	00100 						       */
/*	00101 *						       */
/*	00110						       */
/*	00111						       */
/*	01000						       */
/*	01001						       */
/*	01010						       */
/*	01011						       */
/*	01100						       */
/*	01101						       */
/*	01110						       */
/*	01111						       */
/*	10000						       */
/*	10001						       */
/*	10010						       */
/*	10011						       */
/*	10100						       */
/*	10101						       */
/*	10110						       */
/*	10111						       */
/*	11000						       */
/*	11001						       */
/*	11010						       */
/*	11011						       */
/*	11100						       */
/*	11101						       */
/*	11110						       */
/*	11111						       */
/*							       */
/*							       */
/*=============================================================*/





#include<stdio.h>

int codigoValido(unsigned int n, int tamanho) {
    int size = tamanho-1, i, seq1 = 0, seq2 = 0, n1, n2, s1, s2;

    if(n == 0 && tamanho == 1)
        return 1;

    for(i = 1; i < tamanho; i += 2) {
        n1 = n&(((1<<i)-1)<<(tamanho-i));
        n1 >>= tamanho-i;
        s1 = i;

        n2 = n&(((1<<(tamanho-i-1))-1)<<1);
        n2 >>= 1;
        s2 = tamanho-i-1;

        seq1 = codigoValido(n1, s1);
        seq2 = codigoValido(n2, s2);

        if(n&1 && seq1 && seq2)
            return 1;
        else
            codigoValido(n>>1, size);
    }

    return 0;
}
